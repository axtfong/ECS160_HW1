{
  "name": "opencv",
  "ownerLogin": "opencv",
  "language": "C++",
  "commits": [
    {
      "sha": "09c893477e2b4231948dc8ff616fa49b39538730",
      "message": "Merge pull request #27443 from ritamelo06:gapi-feature\n\nfeat: G-API: Custom stream sources in Python (#27276)",
      "modifiedFiles": [
        "modules/gapi/CMakeLists.txt",
        "modules/gapi/include/opencv2/gapi/pysrc/python_stream_source.hpp",
        "modules/gapi/misc/python/pyopencv_gapi.hpp",
        "modules/gapi/misc/python/test/test_gapi_streaming.py",
        "modules/gapi/src/pysrc/python_stream_source.cpp"
      ]
    },
    {
      "sha": "47d71530a729eda8534920ab3c97ffcde2c3b992",
      "message": "Merge pull request #27866 from JayPol559:4.x\n\nFix HDR tutorial result mismatch by adding gamma note #27866\n\nThis PR fixes #22219 by clarifying the gamma correction value in the HDR tutorial.\n\nThe function cv.createTonemap() has a default gamma value of 1.0. To match the tutorial example results, gamma should be explicitly set to 2.2. This note has been added to the Tonemap HDR image section of the tutorial.",
      "modifiedFiles": [
        "doc/py_tutorials/py_photo/py_hdr/py_hdr.markdown"
      ]
    },
    {
      "sha": "543e9ed01038e0935c6a0fbd8746c4be753a9a58",
      "message": "Merge pull request #27926 from MaximSmolskiy:add_comments_for_fisheye_undistortPoints\n\nAdd comments for fisheye::undistortPoints",
      "modifiedFiles": [
        "modules/calib3d/src/fisheye.cpp"
      ]
    },
    {
      "sha": "b65d66e797621e3340fdbff3056e3fd6b2483500",
      "message": "Add comments for fisheye::undistortPoints",
      "modifiedFiles": [
        "modules/calib3d/src/fisheye.cpp"
      ]
    },
    {
      "sha": "50cd7b8b4bfc75279f0b8e4d49a5199bd8846c6e",
      "message": "Merge pull request #27923 from cudawarped:move_throw_no_cuda_to_stub\n\n[core][cuda] Move throw_no_cuda to it an independant stub",
      "modifiedFiles": [
        "modules/core/include/opencv2/core/private.cuda.hpp",
        "modules/core/include/opencv2/core/private/cuda_stubs.hpp",
        "modules/photo/CMakeLists.txt",
        "modules/photo/src/denoising.cuda.cpp",
        "modules/stitching/CMakeLists.txt"
      ]
    },
    {
      "sha": "53a96cdc0bc8dda393383abc9537c9a0f5057170",
      "message": "Merge pull request #27922 from Kumataro:fix27921\n\nimgcodecs: GDAL: show GDAL version at OpenCV configuration",
      "modifiedFiles": [
        "cmake/OpenCVFindLibsGrfmt.cmake"
      ]
    },
    {
      "sha": "fa276bba3d8cfe01675ea54b5ebdb21254e71907",
      "message": "Merge pull request #27919 from Kumataro:fix27830\n\nimgcodecs: Workaround for image flipping bug in older GDAL FITS drivers",
      "modifiedFiles": [
        "modules/imgcodecs/src/grfmt_gdal.cpp"
      ]
    },
    {
      "sha": "ff216e879656414cd9af7d722201d03e1012e102",
      "message": "[core][cuda] Move throw_no_cuda to it an independant stub so it is not included in the same file that requires cudart",
      "modifiedFiles": [
        "modules/core/include/opencv2/core/private.cuda.hpp",
        "modules/core/include/opencv2/core/private/cuda_stubs.hpp",
        "modules/photo/CMakeLists.txt",
        "modules/photo/src/denoising.cuda.cpp",
        "modules/stitching/CMakeLists.txt"
      ]
    },
    {
      "sha": "346308124ab0815ae9f5c3e1edc7003026e28014",
      "message": "imgcodecs: GDAL: show GDAL version at OpenCV configuration",
      "modifiedFiles": [
        "cmake/OpenCVFindLibsGrfmt.cmake"
      ]
    },
    {
      "sha": "11422da957c1c79d250a137a7559fff4bb2f06db",
      "message": "Merge pull request #27920 from MaximSmolskiy:support_qr_decomposition_for_stereoCalibrate\n\nSupport QR decomposition for stereoCalibrate",
      "modifiedFiles": [
        "modules/calib3d/src/calibration.cpp"
      ]
    },
    {
      "sha": "70d69d07c8889a21b9d28468f12b35c1a4934852",
      "message": "Merge pull request #27914 from MaximSmolskiy:refactor_minEnclosingCircle\n\nRefactor minEnclosingCircle",
      "modifiedFiles": [
        "modules/imgproc/src/shapedescr.cpp"
      ]
    },
    {
      "sha": "455720aae8ef7539706a5e442bed4a75826d2825",
      "message": "Support QR decomposition for stereoCalibrate",
      "modifiedFiles": [
        "modules/calib3d/src/calibration.cpp"
      ]
    },
    {
      "sha": "75f738b3d15a2fae7c78dd208312337d7b4a47fe",
      "message": "imgcodecs: Workaround for image flipping bug in older GDAL FITS drivers",
      "modifiedFiles": [
        "modules/imgcodecs/src/grfmt_gdal.cpp"
      ]
    },
    {
      "sha": "cb8f398a877d74c580b18888682b4190a2b0edf9",
      "message": "Merge pull request #27915 from MaximSmolskiy:fix_ml_kdtree_findNearest\n\nFix ml::KDTree::findNearest",
      "modifiedFiles": [
        "modules/ml/src/knearest.cpp",
        "modules/ml/test/test_knearest.cpp"
      ]
    },
    {
      "sha": "f1a99760ad00c1670d24ea4ffa4a5a4b9417a7ca",
      "message": "Merge pull request #27841 from dkurt:ffmpeg_camera\n\nOpen camera device by index through FFmpeg #27841\n\n### Pull Request Readiness Checklist\n\nresolves https://github.com/opencv/opencv/issues/26812\n\nExample of explicit backend option (similar to `-f v4l2` from command line)\n```\nexport OPENCV_FFMPEG_CAPTURE_OPTIONS\u003d\"f;v4l2\"\n```\nsee https://trac.ffmpeg.org/wiki/Capture/Webcam for available options\n\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\n\n- [x] I agree to contribute to the project under Apache 2 License.\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\n- [x] The PR is proposed to the proper branch\n- [x] There is a reference to the original bug report and related work\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\n      Patch to opencv_extra has the same branch name.\n- [x] The feature is well documented and sample code can be built with the project CMake",
      "modifiedFiles": [
        "modules/videoio/cmake/detect_ffmpeg.cmake",
        "modules/videoio/src/cap_ffmpeg.cpp",
        "modules/videoio/src/cap_ffmpeg_impl.hpp",
        "modules/videoio/src/cap_interface.hpp",
        "modules/videoio/src/videoio_registry.cpp",
        "modules/videoio/test/test_camera.cpp",
        "modules/videoio/test/test_v4l2.cpp"
      ]
    },
    {
      "sha": "98a12515fec3c79021c8a56acab6354e0764c43a",
      "message": "Fix ml::KDTree::findNearest",
      "modifiedFiles": [
        "modules/ml/src/knearest.cpp",
        "modules/ml/test/test_knearest.cpp"
      ]
    },
    {
      "sha": "e45d07e95b1ae7a9e9b849f07b45fcd9c5165db6",
      "message": "Refactor minEnclosingCircle",
      "modifiedFiles": [
        "modules/imgproc/src/shapedescr.cpp"
      ]
    },
    {
      "sha": "c75cd1047b64492acc0fd791c8d74576e9c37306",
      "message": "Merge pull request #27911 from Kumataro:refix26899\n\ncore: fix lut_data data type",
      "modifiedFiles": [
        "modules/core/src/hal_replacement.hpp",
        "modules/core/src/lut.cpp"
      ]
    },
    {
      "sha": "f5014c179f0d75984b838c17fef422b7f8d1c854",
      "message": "Merge pull request #27736 from s-trinh:use_USAC_P3P_in_solvePnP\n\nUpdate Gao P3P with Ding P3P #27736\n\n### Pull Request Readiness Checklist\n\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\n\n- [x] I agree to contribute to the project under Apache 2 License.\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\n- [x] The PR is proposed to the proper branch\n- [x] There is a reference to the original bug report and related work\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\n      Patch to opencv_extra has the same branch name.\n- [ ] The feature is well documented and sample code can be built with the project CMake\n\n---\n\nThe current Gao P3P implementation does not cover all the degenerate cases, **see last line** in: https://github.com/opencv/opencv/blob/6d889ee74c94124f6492eb8f0d50946d9c31d8e9/modules/calib3d/src/p3p.cpp#L211-L221\n\nSee also:\n- https://github.com/opencv/opencv/issues/4854\n\n---\n\n\u003cdetails\u003e\n\n\u003csummary\u003eOBSOLETE\u003c/summary\u003e\n\nTo fix this, the USAC P3P from OpenCV 5 is used instead: https://github.com/opencv/opencv/blob/7e6da007cddcf83a527dfda95d57228fa5a535d3/modules/3d/src/usac/pnp_solver.cpp#L282\n\n---\n\n## Some results\n\n### Old P3P vs new\n\nIn the following video, I have tried to highlight the viewpoints which cause issues:\n\nhttps://github.com/user-attachments/assets/97bec6a6-4043-4509-b50e-a9856d6423bd\n\n| | Old P3P    | New P3P |\n| -------- | ------- | ------- |\n| Mean (ms)  | 0.045701 | 0.024816 |\n| Median (ms) | 0.025146 | 0.023193 |\n| Std (ms)    | 0.028953    | 0.006124 |\n\n### New P3P vs AP3P\n\nhttps://github.com/user-attachments/assets/eaeb21dc-3ffd-4b6c-9902-4352f824aa45\n\nThe AP3 method is superior both in term of accuracy and computation time:\n\n| | New P3P    | AP3P |\n| -------- | ------- | ------- |\n| Mean (ms)  | 0.043750 | 0.023442 |\n| Median (ms) | 0.023193 | 0.021484 |\n| Std (ms)    | 0.039920 | 0.005265 |\n\n### New P3P vs AP3P (range test)\n\nhttps://github.com/user-attachments/assets/572e7b7a-2966-4bed-8e0c-b93d863987dc\n\nThe implemented P3P method does not work well when the tag is small, at long range.\n\n| | New P3P    | AP3P |\n| -------- | ------- | ------- |\n| Mean (ms)  | 0.031351 | 0.025189 |\n| Median (ms) | 0.022217 | 0.020996 |\n| Std (ms)    | 0.024920 | 0.009633 |\n\n---\n\n- I have tried to simplify the P3P code, hope I did not break the implementation code\n- calculations are performed using double type for simplicity.\n- code such as the following are redundant and no more needed and should be replaced by `cv::Rodrigues`:\n\nhttps://github.com/opencv/opencv/blob/6d889ee74c94124f6492eb8f0d50946d9c31d8e9/modules/calib3d/src/usac/pnp_solver.cpp#L395\n\n\u003c/details\u003e",
      "modifiedFiles": [
        "modules/calib3d/doc/calib3d.bib",
        "modules/calib3d/doc/solvePnP.markdown",
        "modules/calib3d/include/opencv2/calib3d.hpp",
        "modules/calib3d/src/p3p.cpp",
        "modules/calib3d/src/p3p.h",
        "modules/calib3d/src/solvepnp.cpp",
        "modules/calib3d/src/usac.hpp",
        "modules/calib3d/src/usac/dls_solver.cpp",
        "modules/calib3d/src/usac/pnp_solver.cpp",
        "modules/calib3d/src/usac/utils.cpp",
        "modules/calib3d/test/test_solvepnp_ransac.cpp"
      ]
    },
    {
      "sha": "ec630504a7dcc9063715b594c113a24c09a4000b",
      "message": "core: fix lut_data data type",
      "modifiedFiles": [
        "modules/core/src/hal_replacement.hpp",
        "modules/core/src/lut.cpp"
      ]
    }
  ],
  "forks": [
    {
      "name": "opencv",
      "ownerLogin": "hdminh-git",
      "commitCount": 0
    },
    {
      "name": "opencv",
      "ownerLogin": "vito-c",
      "commitCount": 0
    },
    {
      "name": "opencv-vedioio-G330-macOS-support",
      "ownerLogin": "sirudoi",
      "commitCount": 0
    },
    {
      "name": "opencv",
      "ownerLogin": "dheermrt",
      "commitCount": 0
    },
    {
      "name": "opencv",
      "ownerLogin": "572004umesh-sketch",
      "commitCount": 0
    },
    {
      "name": "opencv",
      "ownerLogin": "GraphiteTest",
      "commitCount": 0
    },
    {
      "name": "opencv",
      "ownerLogin": "GrainRainLoss",
      "commitCount": 0
    },
    {
      "name": "opencv",
      "ownerLogin": "nishith-fujitsu",
      "commitCount": 0
    },
    {
      "name": "opencv",
      "ownerLogin": "donboose",
      "commitCount": 0
    },
    {
      "name": "opencv",
      "ownerLogin": "longlongago-zsc",
      "commitCount": 0
    }
  ]
}