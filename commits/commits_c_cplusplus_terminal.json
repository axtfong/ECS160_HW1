{
  "name": "terminal",
  "ownerLogin": "microsoft",
  "language": "C++",
  "commits": [
    {
      "sha": "5ae95d7df0ee3050ad36b98cd8f3f8d55005f0d2",
      "message": "Allow creating new windows on another virtual desktop (#19458)\n\nWhoops. Closes #18652\n\n\u003cDHowett\u003e I chatted with Leonard to figure out why I kept\nmisunderstanding this PR. The key is that **this function should not\nalways return an existing window.** It\u0027s supposed to find an existing\nwindow on the current virtual desktop, not literally any window\nanywhere.",
      "modifiedFiles": [
        "src/cascadia/WindowsTerminal/WindowEmperor.cpp"
      ]
    },
    {
      "sha": "b357de9897611767772316c1100584a042af535f",
      "message": "Fix cursor being hidden when pressing modifier keys (#19473)\n\nCloses #19445",
      "modifiedFiles": [
        "src/cascadia/WindowsTerminal/WindowEmperor.cpp"
      ]
    },
    {
      "sha": "b8f35a31c26febbe153642488c88549f93e5980c",
      "message": "Update of the sr-Cyrl-RS translation (#19472)",
      "modifiedFiles": [
        "src/cascadia/TerminalApp/Resources/sr-Cyrl-RS/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/LaunchViewModel.cpp"
      ]
    },
    {
      "sha": "b7bd4f7dcfa94554dc3006049bcc8c526e5207d6",
      "message": "Community Localization to Serbian (sr-Cyrl-RS) (#17995)",
      "modifiedFiles": [
        "src/cascadia/Remoting/Resources/sr-Cyrl-RS/Resources.resw",
        "src/cascadia/TerminalConnection/Resources/sr-Cyrl-RS/Resources.resw",
        "src/cascadia/TerminalControl/Resources/sr-Cyrl-RS/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/sr-Cyrl-RS/Resources.resw",
        "src/cascadia/TerminalSettingsModel/Resources/sr-Cyrl-RS/Resources.resw",
        "src/cascadia/UIHelpers/Resources/sr-Cyrl-RS/Resources.resw"
      ]
    },
    {
      "sha": "f5ddecd1d49d306e1e82543515a12da27c1bbe80",
      "message": "Fix the casing on an image URL in the FTCS marks spec (#19440)",
      "modifiedFiles": [
        ".github/actions/spelling/expect/74d92373e136649071b3c04dc8773f18deaf5e04.txt",
        ".github/actions/spelling/expect/expect.txt",
        "doc/specs/#11000 - Marks/Shell-Integration-Marks.md"
      ]
    },
    {
      "sha": "fcf32351ff6d42097d1c8550e365bb3002a0c8b3",
      "message": "README: Capitalize \u0027Download\u0027 links in distribution table (#19437)\n\nIt\u0027s more consistent.",
      "modifiedFiles": [
        "README.md"
      ]
    },
    {
      "sha": "0e3d136dad1263e36b136b66adbc7e7d4789d56e",
      "message": "Make sure UIHelpers\u0027 resources are included in the final PRI file (#19461)\n\nOCWildcardResource requires the inclusion of a magic MSBuild target that\nwe wrote. We forgot to include it here. Oops.\n\nCloses #19444",
      "modifiedFiles": [
        "src/cascadia/UIHelpers/UIHelpers.vcxproj"
      ]
    },
    {
      "sha": "7f6ab5520ee75e5bcda870998061fd120dbf4966",
      "message": "Localization Updates - main - 10/15/2025 02:48:19 (#19451)\n\nCloses #18849\nCloses #19412\n\nCo-authored-by: Console Service Bot \u003cconsvc@microsoft.com\u003e",
      "modifiedFiles": [
        "src/cascadia/TerminalApp/Resources/ja-JP/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/zh-TW/Resources.resw"
      ]
    },
    {
      "sha": "84cc3e3e52fba14edb54b503247b44d98de04378",
      "message": "Add initial bold font support to the GDI renderer (#19441)\n\nRender SGR1 as bold in 256 and true colors, where \"bold is intense\" is\nnot applicable.\nImplemented by creating 2 extra fonts: bold for 1 and bold italic for 1\n+ 3.\n\nNo non-trivial changes, just extensions.\nLOGFONT also supports Underline and StrikeOut, but they seem to be\nalready covered by other means, so no combinatorial explosion of fonts\nexpected.\n\nRefs #18919\n\nCo-authored-by: Leonard Hecker \u003clhecker@microsoft.com\u003e",
      "modifiedFiles": [
        "src/renderer/gdi/gdirenderer.hpp",
        "src/renderer/gdi/state.cpp"
      ]
    },
    {
      "sha": "819987c90e17dbf6301c777d2ec553a7d115db75",
      "message": "Update WinGet CNF for exact command matching (#19432)\n\n## Summary of the Pull Request\nUpdate the WinGet CNF package search to match that of the updated\nPowerShell WinGet CNF module. Now, we\u0027ll only search for matching\ncommands instead of by name and moniker.\n\n## References and Relevant Issues\nhttps://github.com/microsoft/winget-command-not-found/pull/29\n\n## Validation Steps Performed\n✅ In CMD, type \"vim\" and vim packages are suggested",
      "modifiedFiles": [
        "src/cascadia/TerminalApp/TerminalPage.cpp"
      ]
    },
    {
      "sha": "b62cad640b6871be1daf8b3e80f8db848ae0800e",
      "message": "Fix unfocusedBackground being used as active tab color (#19424)\n\n## Summary of the Pull Request\nTurns out that the `\"TabViewItemHeaderBackground\"` resource should be\nset to the _selected_ color instead of the _deselected_ color.\n\nIn 1.22, (pre-#18109) we actually didn\u0027t set this resource. But we do\nactually need it for high contrast mode! (verified)\n\n## Validation Steps Performed\n✅ High contrast mode looks right\n✅ \"Snazzy\" theme from bug report looks right\n\n## PR Checklist\n Closes #19343",
      "modifiedFiles": [
        "src/cascadia/TerminalApp/Tab.cpp"
      ]
    },
    {
      "sha": "9d7ea77cc8ecbfcf213f6a38fbeb611c71040a34",
      "message": "Use the actual process image instead of module filename to dedup session (#19415)\n\nApparently, `GetModuleFileNameW` returns exactly the path (or prefix, in\ncase of a DLL) passed to `CreateProcess` casing and all. Since we were\nusing it to generate the uniquing hash for Portable and Unpackaged\ninstances, this meant that `C:\\Terminal\\wt` and `C:\\TeRmInAl\\wt` were\nconsidered different instances. Whoops.\n\nUsing `QueryFullProcessImageNameW` instead results in canonicalization.\nMaybe the kernel does it. I don\u0027t know. What I do know is that it works\nmore correctly.\n\n(`Query...` goes through the kernel, while `GetModule...` goes through\nthe loader. Interesting!)\n\nCloses #19253",
      "modifiedFiles": [
        "src/cascadia/WindowsTerminal/WindowEmperor.cpp"
      ]
    },
    {
      "sha": "6a8b2d10f08257459a506d700d3179d8ce74d142",
      "message": "chore: remove extra semicolons from ActionArgs (#19411)\n\nRemoves unnecessary extra semicolons at the end of `Equals` method\nimplementations in various ActionArgs classes.\n\nCloses #19404",
      "modifiedFiles": [
        "src/cascadia/TerminalSettingsModel/ActionArgs.h"
      ]
    },
    {
      "sha": "04676bd31a598ccede4517367cbb070c38964f8e",
      "message": "Only do \"keys\" fixups for non-nested, non-iterable commands (#19408)\n\n## Summary of the Pull Request\nWhen we introduced action IDs, we separated \"commands\" from\n\"keybindings\", and introduced fixup logic to rewrite the legacy-style\ncommand blocks into the new version. However we don\u0027t do any ID logic\nfor nested and iterable commands, so make sure we don\u0027t inform the\nloader for fixups in those cases.\n\n## Validation Steps Performed\nWe no longer repeatedly attempt to fixup the settings file when we see a\n`\"keys\"` entry in a nested/iterable command block\n\n## PR Checklist\n- [x] Closes #18736",
      "modifiedFiles": [
        "src/cascadia/TerminalSettingsModel/ActionMapSerialization.cpp"
      ]
    },
    {
      "sha": "fc2d1078971348a3a3cf3d1eb666e97e99e058c0",
      "message": "Minor fixes to the settings schema (#19387)\n\n## Summary of the Pull Request\nFixes a couple of minor issues in the settings schema which can result\nin erroneous settings validation failures.\n\n## References and Relevant Issues\nNone\n\n## Detailed Description of the Pull Request / Additional comments\n- `answerbackMessage`  \n  Permit `null` type (corresponds to the default value).\n- `compatibility.input.forceVT`  \n  Add missing setting (previously was `experimental.input.forceVT`).\n- `rendering.graphicsAPI`  \n  Add missing `automatic` enumeration value.\n- Mark several settings as deprecated using the same format and direct\nthe user to the updated settings to use.\n\n## Validation Steps Performed\nTested updated schema against configuration with above settings present.\n\n## PR Checklist\n- [X] Schema updated (if necessary)\n\n---------\n\nCo-authored-by: Carlos Zamora \u003ccarlos.zamora@microsoft.com\u003e",
      "modifiedFiles": [
        "doc/cascadia/profiles.schema.json"
      ]
    },
    {
      "sha": "998ab586e1cccf11a965cab9dc2dcdb7da8eaa6c",
      "message": "Remove the leading fire from the taskbar progress handler (#19403)\n\nIf the progress state hasn\u0027t been set for more than 200ms, we shouldn\u0027t\neven bother flickering the old state.\n\nThis prevents applications from making the tab (and the taskbar icon)\nflicker.\n\nWe were reviewing #19394 and decided that the _original_ behavior before\nLeonard\u0027s throttling fix was somewhat unfortunate as well. An\napplication that sets an indeterminate state for 10ms and then clears it\nshouldn\u0027t be able to make any part of the application flicker, fast _or_\nslow.\n\nRemoving the leading fire time from the throttled function ensures that\nit will only fire once every 200ms, and only with the state most\nrecently set. It will not debounce (so setting the progress every 150ms\nwill not prevent it from updating.)\n\nCloses #19394",
      "modifiedFiles": [
        "src/cascadia/TerminalApp/Tab.cpp"
      ]
    },
    {
      "sha": "10ef1284d426e2296e96de6c7369430722e5ffce",
      "message": "Localization Updates - main - 09/30/2025 21:11:05 (#19400)",
      "modifiedFiles": [
        "src/cascadia/TerminalSettingsEditor/Resources/de-DE/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/es-ES/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/fr-FR/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/it-IT/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/ja-JP/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/ko-KR/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/pt-BR/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/qps-ploc/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/qps-ploca/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/qps-plocm/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/ru-RU/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/zh-CN/Resources.resw",
        "src/cascadia/TerminalSettingsEditor/Resources/zh-TW/Resources.resw"
      ]
    },
    {
      "sha": "5976de16000b3e49f3f010c42b23f6a42f6a6405",
      "message": "Avoid reentrancy issues when dropping AppHost, even harder (#19395)\n\nThe previous fix in #19296 moved the _destruction_ of AppHost into the\ntail end after we manipulate the `_windows` vector; however, it kept the\npart which calls into XAML (`Close`) before the `erase`. I suspect that\nwe still had some reentrancy issues, where we cached an iterator before\nthe list was modified by another window close event.\n\nThat is:\n\n```mermaid\nsequenceDiagram\n\t\tEmperor-\u003e\u003eEmperor: Close Window\n\t\tEmperor-\u003e\u003e+AppHost: Close (a)\n\t\tAppHost-\u003e\u003eXAML: Close\n\t\tXAML--\u003e\u003eEmperor: pump loop\n\t\tEmperor-\u003e\u003eEmperor: Close Window\n\t\tEmperor-\u003e\u003e+AppHost: Close (b)\n\t\tAppHost-\u003e\u003eXAML: Close\n\t\tXAML--\u003e\u003eEmperor: pump loop\n\t\tAppHost-\u003e\u003e-Emperor: Closed\n\t\tEmperor-\u003e\u003eEmperor: erase(b)\n\t\tAppHost-\u003e\u003e-Emperor: Closed\n\t\tEmperor-\u003e\u003eEmperor: erase(a)\n```\n\nMoving the `Close()` to after the `erase` ensures that there are no\ncached iterators that survive beyond XAML pumping the message loop.\n\nFixes 8d41ace3",
      "modifiedFiles": [
        "src/cascadia/WindowsTerminal/WindowEmperor.cpp"
      ]
    },
    {
      "sha": "52f9bd6d2c7a1b3d12035a89b5bea534c8f9684c",
      "message": "build: switch Touchdown to Federated Identity (#19399)\n\nThis is required as part of offboarding our non-user service account.",
      "modifiedFiles": [
        "build/pipelines/daily-loc-submission.yml"
      ]
    },
    {
      "sha": "05a4afcf35ab287f0a72015d162067a66973e311",
      "message": " Fix broken MSDN link in gdi/state.cpp (#19375)\n\nCloses #16439\n\nCo-authored-by: Carlos Zamora \u003ccarlos.zamora@microsoft.com\u003e",
      "modifiedFiles": [
        "src/renderer/gdi/state.cpp"
      ]
    }
  ],
  "forks": [
    {
      "name": "terminal",
      "ownerLogin": "Party-VIP",
      "commitCount": 0
    },
    {
      "name": "terminal",
      "ownerLogin": "Raja-89",
      "commitCount": 0
    },
    {
      "name": "terminal1",
      "ownerLogin": "swethaswini",
      "commitCount": 0
    },
    {
      "name": "terminal",
      "ownerLogin": "Newtonjobs",
      "commitCount": 0
    },
    {
      "name": "terminal",
      "ownerLogin": "ansh1406",
      "commitCount": 0
    },
    {
      "name": "bhavesh-terminal",
      "ownerLogin": "bhavesh-210",
      "commitCount": 0
    },
    {
      "name": "terminal",
      "ownerLogin": "Pranay22077",
      "commitCount": 0
    },
    {
      "name": "terminal",
      "ownerLogin": "JDeep1234",
      "commitCount": 0
    },
    {
      "name": "terminal",
      "ownerLogin": "NtUserFillWindow",
      "commitCount": 0
    },
    {
      "name": "terminal",
      "ownerLogin": "IOismaelobregon",
      "commitCount": 0
    }
  ]
}